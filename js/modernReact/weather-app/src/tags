!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
API_KEY	actions/index.js	/^const API_KEY = "01cc19714322cfccf0a42e8e980c110a";$/;"	n
App	components/app.js	/^export default class App extends Component {$/;"	c
Change	containers/search_bar.js	/^          onChange={this.onInputChange}$/;"	c
FETCH_WEATHER	actions/index.js	/^export const FETCH_WEATHER = "FETCH_WEATHER";$/;"	n
Reducer	reducers/index.js	/^const rootReducer = combineReducers({$/;"	c
SearchBar	containers/search_bar.js	/^class SearchBar extends Component {$/;"	c
StoreWithMiddleware	index.js	/^const createStoreWithMiddleware = applyMiddleware(ReduxPromise)(createStore);$/;"	c
Submit	containers/search_bar.js	/^      <form action="" className="input-group" onSubmit={this.onFormSubmit}>$/;"	c
WeatherList	containers/weather_list.js	/^class WeatherList extends Component {$/;"	c
constructor	containers/search_bar.js	/^  constructor(props) {$/;"	f
fetchWeather	actions/index.js	/^export function fetchWeather(city) {$/;"	f
function	reducers/reducer_weather.js	/^export default function(state = [], action) {$/;"	f
if	containers/weather_list.js	/^    if (!cityData) {$/;"	f
mapDispatchToProps	containers/search_bar.js	/^function mapDispatchToProps(dispatch) {$/;"	f
mapStateToProps	containers/weather_list.js	/^\/\/function mapStateToProps({ weather }) {$/;"	f
mapStateToProps	containers/weather_list.js	/^function mapStateToProps(state) {$/;"	f
onFormSubmit	containers/search_bar.js	/^  onFormSubmit(event) {$/;"	f
onInputChange	containers/search_bar.js	/^  onInputChange(event) {$/;"	f
render	components/app.js	/^  render() {$/;"	f
render	containers/search_bar.js	/^  render() {$/;"	f
render	containers/weather_list.js	/^  render() {$/;"	f
renderWeather	containers/weather_list.js	/^  renderWeather(cityData) {$/;"	f
state	containers/search_bar.js	/^    this.state = { term: "" };$/;"	o
switch	reducers/reducer_weather.js	/^  switch (action.type) {$/;"	f
